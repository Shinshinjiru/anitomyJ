{
  "name": "AnitomyJ",
  "tagline": "AnitomyForJava is a Java port of Anitomy, a library for parsing anime video filenames. It's accurate, fast, and simple to use.",
  "body": "[![TravisCI](https://img.shields.io/travis/Vorror/anitomyJ/master.svg?style=flat-square)](https://travis-ci.org/Vorror/anitomyJ)\r\n[![Maven Central](https://img.shields.io/maven-central/v/com.dgtlrepublic/anitomyJ.svg?style=flat-square)](http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22anitomyJ%22)\r\n[![Javadocs](http://javadoc.io/badge/com.dgtlrepublic/anitomyJ.svg?style=flat-square)](http://javadoc.io/doc/com.dgtlrepublic/anitomyJ)\r\n[![License: MPL 2.0](https://img.shields.io/badge/License-MPL%202.0-brightgreen.svg?style=flat-square)](https://opensource.org/licenses/MPL-2.0)\r\n\r\n# AnitomyForJava\r\n\r\n>*AnitomyForJava* is a Java port of [Anitomy](https://github.com/erengy/anitomy), a library for parsing anime video filenames. It's accurate, fast, and simple to use. All credit goes to [@erengy](https://github.com/erengy). I simply ported it.\r\n\r\n## Examples\r\n\r\nThe following filename...\r\n\r\n    [BM&T] Toradora! (2008) - 07v2 - Pool Opening [720p Hi10p FLAC] [BD] [8F59F2BA].mkv\r\n\r\n...would be resolved into these elements:\r\n\r\n- Release group: *BM&T*\r\n- Anime title: *Toradora!*\r\n- Anime year: *2008*\r\n- Episode number: *07*\r\n- Source: *BD*\r\n- Release version: *2*\r\n- Episode title: *Pool Opening*\r\n- Video resolution: *720p*\r\n- Video term: *Hi10p*\r\n- Audio term: *FLAC*\r\n- File checksum: *8F59F2BA*\r\n\r\nHere's an example code snippet...\r\n\r\n```java\r\nimport com.dgtlrepublic.anitomyj.AnitomyJ;\r\nimport com.dgtlrepublic.anitomyj.Element;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        List<Element> elements = AnitomyJ.parse(\r\n                \"[BM&T] Toradora! (2008) - 07v2 - Pool Opening [720p Hi10p FLAC] [BD] [8F59F2BA].mkv\");\r\n        System.out.println(elements.stream()\r\n                                   .map(e -> e.getCategory().name() + \"=\" + e.getValue())\r\n                                   .collect(Collectors.joining(\"\\n\")));\r\n    }\r\n}\r\n\r\n```\r\n\r\n...which will output:\r\n\r\n```\r\nkElementFileExtension=mkv\r\nkElementFileName=[BM&T] Toradora! (2008) - 07v2 - Pool Opening [720p Hi10p FLAC] [BD] [8F59F2BA]\r\nkElementVideoResolution=720p\r\nkElementAnimeType=Opening\r\nkElementVideoTerm=Hi10p\r\nkElementAudioTerm=FLAC\r\nkElementSource=BD\r\nkElementFileChecksum=8F59F2BA\r\nkElementAnimeYear=2008\r\nkElementEpisodeNumber=07\r\nkElementReleaseVersion=2\r\nkElementAnimeTitle=Toradora!\r\nkElementReleaseGroup=BM&T\r\n```\r\n## Installation\r\n### Requirements\r\nJava 8+\r\n### Maven Release\r\nAdd the following to your pom.xml:\r\n```\r\n<dependency>\r\n    <groupId>com.dgtlrepublic</groupId>\r\n    <artifactId>anitomyJ</artifactId>\r\n</dependency>\r\n```\r\n\r\n### Binary Release\r\nBinary releases can be found [here](https://github.com/Vorror/anitomyJ/releases/latest). Apache Commons(v3.4+) and Apache Commons Collections(v3.2+) are required. For convenience `anitomyJ-<version>-with-dependencies.jar` is provided, but installing the dependencies manually is recommended.\r\n\r\n## Issues & Pull Requests\r\n\r\nFor the most part, AnitomyJ aims to be an exact Java replica of the original Anitomy. To make porting upstream changes easier most of the logic + file structure remain similar to their c++ counterparts. So, for the time being, I won't be accepting pull requests/issues that change the core parsing logic. I suggest opening an issue with the original Anitomy project and when it's fixed I'll merge it downstream.\r\n\r\nThat being said if the output of AnitomyJ and Anitomy differ in *any way* please open an issue.\r\n\r\n## FAQ\r\n\r\n- Why didn't you use JNI/JNA over porting over the library?\r\n\r\n    That was an option, but since anitomy is a small library I decided just to just to rewrite it in native Java. The average SLOC is about 140 lines per java file, so it didn't take much time.\r\n\r\n\r\n## License\r\n\r\n*AnitomyForJava* is licensed under [Mozilla Public License 2.0](https://www.mozilla.org/en-US/MPL/2.0/FAQ/).",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}